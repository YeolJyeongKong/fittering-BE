name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: fittering-bucket-test
  CODE_DEPLOY_APPLICATION_NAME: fittering-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: fittering-codedeploy-group


permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # application.yml
      - name: make application.yml
        run: touch ./src/main/resources/application.yml
      - name: deliver application.yml
        run: echo "${{ secrets.APP_SECRET }}" | base64 --decode > ./src/main/resources/application.yml

      # application-oauth.yml
      - name: make application-oauth.yml
        run: touch ./src/main/resources/application-oauth.yml
      - name: deliver application-oauth.yml
        run: echo "${{ secrets.APP_OAUTH_SECRET }}" | base64 --decode > ./src/main/resources/application-oauth.yml

      # clean & build
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Clean and Build with Gradle
        run: ./gradlew clean build -x test

      # AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 빌드 -> S3 버킷에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip